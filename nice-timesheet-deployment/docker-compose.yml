services:

  nice-timesheet-nginx:
    image: nginx:1.27-alpine
    container_name: "nice_timesheet_nginx"
    depends_on:
      nice-timesheet-keycloak:
        condition: service_healthy
    networks:
      nice-timesheet-network:
    ports:
      - "443:443"
    volumes:
      - "nice_timesheet_nginx_conf:/etc/nginx/conf.d"
      - "nice_timesheet_nginx_certs:/etc/nginx/certs"
    deploy:
      resources:
        limits:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -k --fail https://localhost:443 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nice-timesheet-be:
    profiles:
      - backend
    build:
      context: ../nice-timesheet-be
    container_name: "nice_timesheet_be"
    depends_on:
      nice-timesheet-keycloak:
        condition: service_healthy
    environment:
      DB_HOST: nice-timesheet-postgres
      DB_PORT: 5432
      DB_NAME: nice_timesheet
      DB_USERNAME: postgres_usr
      DB_PASSWORD: postgres_pwd
      DB_SYNC: true
      KEYCLOAK_URL: http://sso.nice-timesheet.io:8080
      KEYCLOAK_REALM: nice-timesheet-realm
    networks:
      - nice-timesheet-network
    ports:
      - "8091:8091"
    deploy:
      resources:
        limits:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -q http://127.0.0.1:8091/api/1.0/debug || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  nice-timesheet-keycloak-config-cli:
    image: adorsys/keycloak-config-cli:6.2.1-23
    container_name: "nice_timesheet_keycloak_config_cli"
    depends_on:
      nice-timesheet-keycloak:
        condition: service_healthy
    environment:
      KEYCLOAK_URL: http://nice-timesheet-keycloak:8080/
      KEYCLOAK_USER: "keycloak_usr"
      KEYCLOAK_PASSWORD: "keycloak_pwd"
      KEYCLOAK_AVAILABILITYCHECK_ENABLED: true
      KEYCLOAK_AVAILABILITYCHECK_TIMEOUT: 120s
      KEYCLOAK_SSLVERIFY: false
      IMPORT_FILES_LOCATIONS: '/config/*'
      LOGGING_LEVEL_ROOT: INFO
    networks:
      - nice-timesheet-network
    volumes:
      - "keycloak_config_cli_conf:/config"

  nice-timesheet-keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: "nice_timesheet_keycloak"
    depends_on:
      nice-timesheet-postgres:
        condition: service_healthy
    environment:
      # Imposta le credenziali di root
      KEYCLOAK_ADMIN: "keycloak_usr"
      KEYCLOAK_ADMIN_PASSWORD: "keycloak_pwd"
      # Abilita gli endpoint per il monitoring e le metriche
      # http://localhost:8080/health/ready
      # http://localhost:8080/metrics
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      # Necessarie per PROD
      # Fissa l'indirizzo che verrà usato da keycloak nell'issuer e per evitare problemi di clustering
      # Inoltre, imposta un diverso indirizzo per la console di amministrazione
      KC_HOSTNAME: "sso.nice-timesheet.io"
      #      KC_HOSTNAME_ADMIN_URL: "http://127.0.0.1:8080"
      # ALT-2 - Abilita http quando dietro un proxy con TLS termination
      KC_PROXY: edge
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      # KC_HTTP_PORT: "9002"
      # Abilita l'uso di un DB esterno
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_URL_HOST: nice-timesheet-postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: "postgres_usr"
      KC_DB_PASSWORD: "postgres_pwd"
    command:
      - "start"
    networks:
      nice-timesheet-network:
        aliases:
          - sso.nice-timesheet.io
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          # Keycloak calcola dinamicamente la dimensione dell'heap
          # in base alla memoria totale del container;
          # Quindi, è necessario impostare il limite di memoria per il container.
          # https://www.keycloak.org/server/containers
          memory: 2G
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3" ]
      interval: 5s
      start_period: 20s
      start_interval: 20s
      timeout: 5s
      retries: 5

  nice-timesheet-postgres:
    container_name: "nice_timesheet_postgres"
    image: postgres:17.2
    environment:
      POSTGRES_USER: "postgres_usr"
      POSTGRES_PASSWORD: "postgres_pwd"
      POSTGRES_MULTIPLE_DATABASES: "keycloak,nice_timesheet"
    networks:
      - nice-timesheet-network
    ports:
      - "9001:5432"
    volumes:
      - "nice_timesheet_postgres_init_scripts:/docker-entrypoint-initdb.d/:ro"
      - "nice_timesheet_postgres_data:/var/lib/postgresql/data/"
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d keycloak -U postgres_usr" ]
      interval: 5s
      timeout: 5s
      retries: 5


# TODO: Container BE

# TODO: Container FE

volumes:

  # Contains the load-balancing configurations for nginx
  nice_timesheet_nginx_conf:
    name: nice_timesheet_nginx_config
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./_nginx/conf

  # Contains the certificates for SSL-termination on nginx
  nice_timesheet_nginx_certs:
    name: nice_timesheet_nginx_certs
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./_nginx/certs

  # Contains the files to autoconfigure keycloak
  keycloak_config_cli_conf:
    name: nice_timesheet_keycloak_config_cli_conf
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./_keycloak_config_cli/conf

  # Contains the script to initialize the DB
  nice_timesheet_postgres_init_scripts:
    name: nice_timesheet_postgres_init_scripts
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./_postgres/sql

  # Contains the DB data. Removing this volume should destroy the whole database
  nice_timesheet_postgres_data:
    name: nice_timesheet_postgres_data
    driver: local

networks:
  nice-timesheet-network:
    name: nice_timesheet_network
    driver: bridge
    external: false